@implements IDisposable

@inject NavigationManager NavigationManager

<MudNavMenu>
    <MudNavLink Icon="@Icons.Material.Filled.Home" Href="/" Match="NavLinkMatch.All">Home</MudNavLink>
    <MudNavLink Icon="@Icons.Material.Filled.PlusOne" Href="counter" Match="NavLinkMatch.All">Counter</MudNavLink>
    <MudNavLink Icon="@Icons.Material.Filled.Cloud" Href="weather" Match="NavLinkMatch.All">Weather</MudNavLink>
    <MudNavLink Icon="@Icons.Material.Filled.Key" Href="auth" Match="NavLinkMatch.All">Auth Required</MudNavLink>
    <AuthorizeView>
        <Authorized>
            <MudNavLink Icon="@Icons.Material.Filled.Person2" Href="Account/Manage" Match="NavLinkMatch.All">@context.User.Identity?.Name</MudNavLink>
            
            <div class="mud-nav-item"> 
                <form action="Account/Logout" method="post">
                    <AntiforgeryToken />
                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                    <MudButton StartIcon="@Icons.Material.Filled.ArrowLeft" ButtonType="ButtonType.Submit">Logout</MudButton>
                    
                </form>
            </div>
        </Authorized>
        <NotAuthorized>
            <MudNavLink Icon="@Icons.Material.Filled.Person2" Href="Account/Register" Match="NavLinkMatch.All">Register</MudNavLink>
            <MudNavLink Icon="@Icons.Material.Filled.Person" Href="Account/Login" Match="NavLinkMatch.All">Login</MudNavLink>
        </NotAuthorized>
    </AuthorizeView>

</MudNavMenu>
@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

