@page "/meals"
@using FitnessFox.Components.ViewModels
@using FitnessFox.Data.Foods
@using FitnessFox.Data.Goals

@attribute [Authorize]
@inject ApplicationDbContext dbContext
@inject IAuthenticationService authenticationService
@inject ISnackbar Snackbar
@inherits ViewModelComponentBase<MealsViewModel>
<MudGrid>
    <MudItem xs="12" sm="12" md="12">
        <MudPaper Elevation="2" Class="pa-4" Style="height: 100px;">
            <MudText Typo="Typo.h6">Current Date</MudText>
            <MudStack Row=true>
                <MudIconButton Disabled=Vm.IsLoading OnClick="() => Vm.Load(() => Vm.SetDate(Vm.CurrentDate?.AddDays(-1)))" Icon="@Icons.Material.Filled.ArrowLeft"></MudIconButton>
                <MudDatePicker Disabled=Vm.IsLoading @bind-Date="Vm.CurrentDate" @bind-Date:after="() => Vm.Load(Vm.Refresh)"></MudDatePicker>
                <MudIconButton Disabled=Vm.IsLoading OnClick="() => Vm.Load(() => Vm.SetDate(Vm.CurrentDate?.AddDays(1)))" Icon="@Icons.Material.Filled.ArrowRight"></MudIconButton>
            </MudStack>
        </MudPaper>
    </MudItem>

    <MudItem xs="12" sm="6" md="4">
        <MudPaper Elevation="2" Class="pa-4">
            @{
                var goal = Vm.Goals.FirstOrDefault(g => g.Type == UserGoalType.Calories);
            }

            <MudProgressCircular Style="height: 100px; width: 100px" Color="Color.Primary" Value="@Vm.UserMeals.Sum(s => s.Calories)" Max="goal?.Value ?? 2000">
                <ChildContent>
                    <MudStack Spacing="0" AlignItems="AlignItems.Center" Justify="Justify.Center">
                        <MudText Typo="Typo.subtitle2">Calories</MudText>
                        <MudText Typo="Typo.subtitle2">@MathF.Round(Vm.UserMeals.Sum(s => s.Calories))/@(@goal?.Value ?? 2000)</MudText>
                    </MudStack>
                </ChildContent>
            </MudProgressCircular>

        </MudPaper>
    </MudItem>

    <MudItem xs="12" sm="12" md="12">
        <MudPaper Elevation="2" Class="pa-4">
            <MudText Typo="Typo.h4">Meals</MudText>
            <MudButtonGroup  Variant="Variant.Filled" >
                <MudIconButton Disabled=Vm.IsLoading title="Breakfast" Icon="@Icons.Material.Filled.EggAlt" OnClick="() =>    Vm.Add(UserMealType.Breakfast)"></MudIconButton>
                <MudIconButton Disabled=Vm.IsLoading title="Lunch" Icon="@Icons.Material.Filled.LunchDining" OnClick="() =>   Vm.Add(UserMealType.Lunch)"></MudIconButton>
                <MudIconButton Disabled=Vm.IsLoading title="Dinner" Icon="@Icons.Material.Filled.OutdoorGrill" OnClick="() => Vm.Add(UserMealType.Dinner)"></MudIconButton>
                <MudIconButton Disabled=Vm.IsLoading title="Snack" Icon="@Icons.Material.Filled.LocalDrink" OnClick="() =>    Vm.Add(UserMealType.Snacks)"></MudIconButton>

                <MudIconButton Disabled=Vm.IsLoading title="Add Food" Color="Color.Primary" Variant="Variant.Filled" Icon="@Icons.Material.Filled.Add" Href="/foods/add"></MudIconButton>
            </MudButtonGroup>
            <MudTable Items="Vm.UserMeals" RowEditCommit="async i => await Vm.Load(() => Vm.Update(i as UserMeal))" CanCancelEdit=true>
            
                <HeaderContent>
                    <MudTh>Type</MudTh>
                    <MudTh>Meal</MudTh>
                    <MudTh>Servings</MudTh>
                    <MudTh>Calories</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>@context.Type</MudTd>
                    <MudTd>@context.MealItem</MudTd>
                    <MudTd>@context.Servings (@context.ServingUnitDisplay)</MudTd>
                    <MudTd>@MathF.Round(context.Calories)</MudTd>
                </RowTemplate>
                <RowEditingTemplate>
                    <MudTd>
                        <MudSelect T="UserMealType" @bind-Value="context.Type">
                            @foreach (UserMealType item in Enum.GetValues(typeof(UserMealType)))
                            {
                                <MudSelectItem T="UserMealType" Value="@item">@item</MudSelectItem>
                            }
                        </MudSelect>
                    </MudTd>
                    <MudTd>
                        <MudAutocomplete T="Nutrients"
                                         @bind-Value="@context.MealItem"
                                         SearchFunc="Vm.Search"
                                         Variant="Variant.Outlined"
                                         Label="Meal" MaxItems="100"
                                         Clearable></MudAutocomplete>
                        <MudIconButton Color="Color.Primary" Variant="Variant.Filled" Icon="@Icons.Material.Filled.Edit" Href="@($"/foods/{@context.FoodId}")"></MudIconButton>

                    </MudTd>
                    <MudTd>
                        <MudNumericField T="float"
                                      @bind-Value="context.Servings"
                                      Label="Servings"></MudNumericField> (@context.ServingUnitDisplay)
                    </MudTd>
                </RowEditingTemplate>
            </MudTable>
        </MudPaper>
    </MudItem>
</MudGrid>