@page "/settings"
@using FitnessFox.Components.Data.Options
@using FitnessFox.Components.Data.Settings
@using FitnessFox.Components.Services
@using FitnessFox.Components.ViewModels
@using Microsoft.Extensions.Options
@inject ISyncService googleSyncService
@inject ISettingsService settingsService
@inject IOptions<GoogleOptions> googleOptions
@inject ISnackbar Snackbar
@inject IDialogService dialogService
@inject ApplicationDbContext applicationDbContext
@inject NavigationManager nav
@inherits ViewModelComponentBase<SettingsViewModel>
<h3>Settings</h3>

<MudText>To sync your local data to Google sheets, add the sheet id (in the url) and share the sheet with this email: @googleOptions.Value.UserEmail</MudText>
<MudButton Disabled="Vm.IsLoading" OnClick="() => Vm.Load(Vm.Sync)">Sync to Google</MudButton>
<MudButton Disabled="Vm.IsLoading" OnClick="() => Vm.Load(Vm.ClearDb)">Clear Database</MudButton>

<MudGrid>
    @foreach (var key in Vm.Keys.Where(k => k.GetAttribute<DisplayAttribute>() != null))
    {
        <MudItem xs="12" sm="6" md="4">
            <MudPaper Elevation="2" Style="padding: 10px">
                @{
                    var name = key.GetAttribute<DisplayAttribute>();

                }

                @if (name?.ResourceType == typeof(string))
                {
                    <MudTextField T="string"
                                  Disabled="Vm.IsLoading"
                                  Label="@name?.Name"
                                  ValueChanged="a => Vm.Load(() => Vm.SetValue(key, a))"
                                  Value="@(Vm.KeyValues.ContainsKey(key.ToString()) ? Vm.KeyValues[key.ToString()].GetValue<string>() : "")">

                    </MudTextField>
                }
                else if (name?.ResourceType == typeof(bool))
                {
                    <MudCheckBox T="bool"
                                 Disabled="Vm.IsLoading"
                                 Label="@name?.Name"
                                 ValueChanged="a => Vm.Load(() => Vm.SetValue(key, a))"
                                 Value="@(Vm.KeyValues.ContainsKey(key.ToString()) ? Vm.KeyValues[key.ToString()].GetValue<bool>() : false)">
                                 
                    </MudCheckBox>
                }
                else if (name?.ResourceType == typeof(DateTime))
                {
                    <MudDatePicker
                        Disabled="Vm.IsLoading"
                        Label="@name?.Name"
                        Date="@(Vm.KeyValues.ContainsKey(key.ToString()) ? Vm.KeyValues[key.ToString()].GetValue<DateTime>() : DateTime.MinValue)"
                        DateChanged="a => Vm.Load(() => Vm.SetValue(key, a))">
                    </MudDatePicker>
                }


            </MudPaper>
        </MudItem>
    }
</MudGrid>
