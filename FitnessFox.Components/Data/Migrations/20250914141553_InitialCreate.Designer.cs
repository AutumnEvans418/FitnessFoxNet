// <auto-generated />
using System;
using FitnessFox.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitnessFox.Components.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250914141553_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.20");

            modelBuilder.Entity("FitnessFox.Components.Data.Settings.UserSetting", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id", "UserId");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("FitnessFox.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<float>("HeightInches")
                        .HasColumnType("REAL");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("FitnessFox.Data.Foods.Food", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BrandRestaurant")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Calcium")
                        .HasColumnType("REAL");

                    b.Property<float>("Calories")
                        .HasColumnType("REAL");

                    b.Property<float>("Carbs")
                        .HasColumnType("REAL");

                    b.Property<float>("Cholesterol")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Fiber")
                        .HasColumnType("REAL");

                    b.Property<float>("Iron")
                        .HasColumnType("REAL");

                    b.Property<float>("MonosaturatedFat")
                        .HasColumnType("REAL");

                    b.Property<float>("PolysaturatedFat")
                        .HasColumnType("REAL");

                    b.Property<float>("Potassium")
                        .HasColumnType("REAL");

                    b.Property<float>("Protein")
                        .HasColumnType("REAL");

                    b.Property<float>("SaturatedFat")
                        .HasColumnType("REAL");

                    b.Property<float>("ServingSize")
                        .HasColumnType("REAL");

                    b.Property<string>("ServingUnit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Sodium")
                        .HasColumnType("REAL");

                    b.Property<float>("Sugar")
                        .HasColumnType("REAL");

                    b.Property<float>("TotalFat")
                        .HasColumnType("REAL");

                    b.Property<float>("TotalServings")
                        .HasColumnType("REAL");

                    b.Property<float>("TransFat")
                        .HasColumnType("REAL");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("VitaminA")
                        .HasColumnType("REAL");

                    b.Property<float>("VitaminC")
                        .HasColumnType("REAL");

                    b.Property<float>("VitaminK")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("FitnessFox.Data.Foods.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<float>("Calcium")
                        .HasColumnType("REAL");

                    b.Property<float>("Calories")
                        .HasColumnType("REAL");

                    b.Property<float>("Carbs")
                        .HasColumnType("REAL");

                    b.Property<float>("Cholesterol")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<float>("Fiber")
                        .HasColumnType("REAL");

                    b.Property<float>("Iron")
                        .HasColumnType("REAL");

                    b.Property<float>("MonosaturatedFat")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("NumberOfPeople")
                        .HasColumnType("REAL");

                    b.Property<float>("PolysaturatedFat")
                        .HasColumnType("REAL");

                    b.Property<float>("Potassium")
                        .HasColumnType("REAL");

                    b.Property<float>("Protein")
                        .HasColumnType("REAL");

                    b.Property<float>("SaturatedFat")
                        .HasColumnType("REAL");

                    b.Property<float>("Sodium")
                        .HasColumnType("REAL");

                    b.Property<float>("Sugar")
                        .HasColumnType("REAL");

                    b.Property<float>("TotalFat")
                        .HasColumnType("REAL");

                    b.Property<float>("TransFat")
                        .HasColumnType("REAL");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("VitaminA")
                        .HasColumnType("REAL");

                    b.Property<float>("VitaminC")
                        .HasColumnType("REAL");

                    b.Property<float>("VitaminK")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("FitnessFox.Data.Foods.RecipeFood", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<float>("Amount")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FoodId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeFoods");
                });

            modelBuilder.Entity("FitnessFox.Data.Foods.UserMeal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<float>("Calcium")
                        .HasColumnType("REAL");

                    b.Property<float>("Calories")
                        .HasColumnType("REAL");

                    b.Property<float>("Carbs")
                        .HasColumnType("REAL");

                    b.Property<float>("Cholesterol")
                        .HasColumnType("REAL");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<float>("Fiber")
                        .HasColumnType("REAL");

                    b.Property<int?>("FoodId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("FoodId1")
                        .HasColumnType("TEXT");

                    b.Property<float>("Iron")
                        .HasColumnType("REAL");

                    b.Property<float>("MonosaturatedFat")
                        .HasColumnType("REAL");

                    b.Property<float>("PolysaturatedFat")
                        .HasColumnType("REAL");

                    b.Property<float>("Potassium")
                        .HasColumnType("REAL");

                    b.Property<float>("Protein")
                        .HasColumnType("REAL");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("RecipeId1")
                        .HasColumnType("TEXT");

                    b.Property<float>("SaturatedFat")
                        .HasColumnType("REAL");

                    b.Property<float>("Servings")
                        .HasColumnType("REAL");

                    b.Property<float>("Sodium")
                        .HasColumnType("REAL");

                    b.Property<float>("Sugar")
                        .HasColumnType("REAL");

                    b.Property<float>("TotalFat")
                        .HasColumnType("REAL");

                    b.Property<float>("TransFat")
                        .HasColumnType("REAL");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("VitaminA")
                        .HasColumnType("REAL");

                    b.Property<float>("VitaminC")
                        .HasColumnType("REAL");

                    b.Property<float>("VitaminK")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("FoodId1");

                    b.HasIndex("RecipeId1");

                    b.HasIndex("UserId");

                    b.ToTable("UserMeals");
                });

            modelBuilder.Entity("FitnessFox.Data.Goals.UserGoal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserGoals");
                });

            modelBuilder.Entity("FitnessFox.Data.Vitals.UserVital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserVitals");
                });

            modelBuilder.Entity("FitnessFox.Data.Foods.Food", b =>
                {
                    b.HasOne("FitnessFox.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessFox.Data.Foods.Recipe", b =>
                {
                    b.HasOne("FitnessFox.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessFox.Data.Foods.RecipeFood", b =>
                {
                    b.HasOne("FitnessFox.Data.Foods.Food", "Food")
                        .WithMany()
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnessFox.Data.Foods.Recipe", "Recipe")
                        .WithMany("Foods")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("FitnessFox.Data.Foods.UserMeal", b =>
                {
                    b.HasOne("FitnessFox.Data.Foods.Food", "Food")
                        .WithMany()
                        .HasForeignKey("FoodId1");

                    b.HasOne("FitnessFox.Data.Foods.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId1");

                    b.HasOne("FitnessFox.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessFox.Data.Goals.UserGoal", b =>
                {
                    b.HasOne("FitnessFox.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessFox.Data.Vitals.UserVital", b =>
                {
                    b.HasOne("FitnessFox.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessFox.Data.Foods.Recipe", b =>
                {
                    b.Navigation("Foods");
                });
#pragma warning restore 612, 618
        }
    }
}
